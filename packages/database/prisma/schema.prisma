// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Guild {
  id                    Int           @id @default(autoincrement())
  name                  String
  icon                  String?
  discordId             String
  announcementChannelId String?
  raids                 Raid[]
  compositions          Composition[]
}

model Raid {
  id            Int          @id @default(autoincrement())
  description   String
  status        RaidStatus   @default(SCHEDULED)
  date          DateTime
  guild         Guild        @relation(fields: [guildId], references: [id])
  guildId       Int
  composition   Composition  @relation(fields: [compositionId], references: [id])
  compositionId Int
  createdAt     DateTime     @default(now())
  updatedAt     DateTime     @updatedAt
  RaidSignup    RaidSignup[]
}

model Composition {
  id        Int      @id @default(autoincrement())
  name      String
  Guild     Guild    @relation(fields: [guildId], references: [id])
  guildId   Int
  Builds    Build[]
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  Raid      Raid[]
}

model Build {
  id          Int           @id @default(autoincrement())
  name        String
  role        Role?
  createdAt   DateTime      @default(now())
  updatedAt   DateTime      @updatedAt
  RaidSignup  RaidSignup[]
  Composition Composition[]
}

model RaidSignup {
  id        Int      @id @default(autoincrement())
  userId    String
  raid      Raid     @relation(fields: [raidId], references: [id])
  raidId    Int
  build     Build    @relation(fields: [buildId], references: [id])
  buildId   Int
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

enum Role {
  CALLER
  TANK
  SUPPORT
  HEALER
  RANGED_DPS
  MEELE_DPS
  BATTLEMOUNT
}

enum RaidStatus {
  SCHEDULED
  OPEN
  CLOSED
  ONGOING
  FINISHED
}
