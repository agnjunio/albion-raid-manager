// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Guild {
  id                    Int           @id @default(autoincrement())
  name                  String
  icon                  String?
  discordId             String
  announcementChannelId String?
  raids                 Raid[]
  compositions          Composition[]
}

model Build {
  id               Int               @id @default(autoincrement())
  name             String
  role             Role
  createdAt        DateTime          @default(now())
  updatedAt        DateTime          @updatedAt
  CompositionSlots CompositionSlot[]
  RaidSlot         RaidSlot[]
}

model Composition {
  id        Int               @id @default(autoincrement())
  name      String
  Guild     Guild             @relation(fields: [guildId], references: [id])
  guildId   Int
  slots     CompositionSlot[]
  createdAt DateTime          @default(now())
  updatedAt DateTime          @updatedAt
}

model CompositionSlot {
  id            Int         @id @default(autoincrement())
  Composition   Composition @relation(fields: [compositionId], references: [id])
  compositionId Int
  Build         Build       @relation(fields: [buildId], references: [id])
  buildId       Int
  comment       String?
  assignedAt    DateTime    @default(now())
}

model Raid {
  id                    Int        @id @default(autoincrement())
  description           String
  status                RaidStatus @default(SCHEDULED)
  announcementMessageId String?
  date                  DateTime
  guild                 Guild      @relation(fields: [guildId], references: [id])
  guildId               Int
  slots                 RaidSlot[]
  createdAt             DateTime   @default(now())
  updatedAt             DateTime   @updatedAt
}

model RaidSlot {
  id         Int      @id @default(autoincrement())
  raid       Raid     @relation(fields: [raidId], references: [id])
  raidId     Int
  build      Build    @relation(fields: [buildId], references: [id])
  buildId    Int
  userId     String?
  assignedAt DateTime @default(now())
}

enum Role {
  CALLER
  TANK
  SUPPORT
  HEALER
  RANGED_DPS
  MELEE_DPS
  BATTLEMOUNT
}

enum RaidStatus {
  SCHEDULED
  OPEN
  CLOSED
  ONGOING
  FINISHED
}
