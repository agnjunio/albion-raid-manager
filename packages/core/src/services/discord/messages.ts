import { APIMessage } from "discord-api-types/v10";

import config from "@albion-raid-manager/core/config";
import { getAuthorization } from "@albion-raid-manager/core/utils/discord";

import { discordApiClient } from "./client";
import { DiscordServiceOptions } from "./types";

type File = {
  id: number;
  name: string;
  description: string;
  image: string;
};

type SendMessagePayload = {
  content?: string;
  files?: {
    name: string;
    description: string;
    attachment: string;
  }[];
  attachments?: {
    id: number;
    description: string;
    name: string;
  }[];
};

export const sendMessage = async (
  channelId: string,
  payload: SendMessagePayload,
  { type = "bot", token = config.discord.token }: DiscordServiceOptions,
) => {
  if (!payload) throw new Error("Empty message");

  // If we have files (generated by embeds helper), transform them to attachments
  const files: File[] = [];
  if (payload.files && payload.files.length > 0) {
    payload.files.forEach((file, i) => {
      files.push({
        id: i,
        description: file.description,
        name: file.name,
        image: file.attachment,
      });
    });
    delete payload.files;
    payload.attachments = files.map((file) => ({
      id: file.id,
      description: file.description,
      name: file.name,
    }));
  }

  const form = new FormData();
  form.append("payload_json", JSON.stringify(payload));
  files.forEach((file) => {
    form.append(`files[${file.id}]`, new Blob([file.image]), file.name);
  });

  const res = await discordApiClient.postForm<APIMessage>(`/channels/${channelId}/messages`, form, {
    headers: {
      Authorization: getAuthorization(type, token),
    },
  });
  return res.data;
};
